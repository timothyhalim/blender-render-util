shader simpleVolumetric(
    color Color = color(0.5, 0.5, 0.5),
    float Density = 1.0,
    float Anisotropy = 0.0,
    float LightRay = 0.0,
    color AbsorptionColor = color(0.0, 0.0, 0.0),
    string DensityAttribute = "geom:density",
    string ColorAttribute = "geom:color",
    output closure color Volume = 0
)
{
    /* Compute density. */
    float primitive_density = 1.0;
    float density = max(Density, 0.0);

    if (density > 1e-5) {
        if (getattribute(DensityAttribute, primitive_density)) {
            density = max(density * primitive_density, 0.0);
        }
    }

    if (density > 1e-5) {
        /* Compute scattering color. */
        color scatter_color = Color;
        color primitive_color;
        if (getattribute(ColorAttribute, primitive_color)) {
            scatter_color *= primitive_color;
        }

        /* Add scattering and absorption closures. */
        color scatter_coeff = scatter_color;
        color absorption_color = sqrt(max(AbsorptionColor, 0.0));
        color absorption_coeff = max(1.0 - scatter_color, 0.0) * max(1.0 - absorption_color, 0.0);
        Volume = scatter_coeff * density * henyey_greenstein(Anisotropy) +
                         absorption_coeff * density * absorption();
    }
}